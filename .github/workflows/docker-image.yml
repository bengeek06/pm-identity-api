name: Build and Publish Docker Image

on:
  push:
    branches: [ main, guardian_staging ]
    paths:
      - "Dockerfile"
      - "**/*.py"
      - "requirements.txt"
      - "requirements-dev.txt"
      - ".github/workflows/docker-image.yml"
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # org/repo
  DOCKERFILE_PATH: ./Dockerfile
  CONTEXT: .
  PROD_TARGET: production
  TEST_TARGET: test

jobs:
  build:
    name: Build (no push on PR)
    if: github.event_name == 'pull_request'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build production image (no push)
        uses: docker/build-push-action@v5
        with:
            context: ${{ env.CONTEXT }}
            file: ${{ env.DOCKERFILE_PATH }}
            target: ${{ env.PROD_TARGET }}
            push: false
            load: true
            tags: test-image:pr-${{ github.run_id }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

  build-and-push:
    name: Build & Push
    if: github.event_name == 'push'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version (optional)
        id: meta
        run: |
          VERSION_FILE="VERSION"
          if [ -f "$VERSION_FILE" ]; then
            VERSION_TAG=$(cat "$VERSION_FILE" | tr -d ' \n')
          else
            VERSION_TAG=""
          fi
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
          echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Define tags
        id: tags
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          SHA_TAG="${IMAGE}:sha-${{ steps.meta.outputs.short_sha }}"
          TAGS="${SHA_TAG}"

          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            TAGS="${TAGS},${IMAGE}:latest"
            if [ -n "${{ steps.meta.outputs.version_tag }}" ]; then
              TAGS="${TAGS},${IMAGE}:${{ steps.meta.outputs.version_tag }}"
            fi
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build & Push (production target)
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          target: ${{ env.PROD_TARGET }}
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.build_time }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output published tags
        run: |
          echo "Published tags: ${{ steps.tags.outputs.tags }}"
